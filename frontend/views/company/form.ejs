<div class="bg-white p-6 rounded-lg shadow-md max-w-lg mx-auto">
    <h2 class="text-2xl font-semibold text-gray-700 mb-4">Add New Company</h2>

    <!-- Company Form -->
    <form data-bind="submit: addCompany">
        <label class="block mb-2">Company Name</label>
        <input type="text" data-bind="value: name" 
            class="w-full p-2 mb-4 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500">

        <label class="block mb-2">Email</label>
        <input type="email" data-bind="value: email"
            class="w-full p-2 mb-4 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500">

        <label class="block mb-2">Password</label>
        <input type="password" data-bind="value: password"
            class="w-full p-2 mb-4 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500">

        <div class="flex justify-between">
            <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600">
                Add Company
            </button>

            <button type="button" onclick="location.href='/admin/companies'"
                class="bg-gray-500 text-white px-4 py-2 rounded-md hover:bg-gray-600">
                Cancel
            </button>
        </div>
    </form>

    <!-- Success/Error Message -->
    <p class="text-green-500 mt-4" data-bind="visible: successMessage, text: successMessage"></p>
    <p class="text-red-500 mt-4" data-bind="visible: errorMessage, text: errorMessage"></p>
</div>

<script src="/javascripts/knockout.js"></script>
<script>
    function AddCompanyViewModel() {
        var self = this;

        self.name = ko.observable("");
        self.email = ko.observable("");
        self.password = ko.observable("");
        self.successMessage = ko.observable("");
        self.errorMessage = ko.observable("");

        self.addCompany = async function () {
            if (!self.name() || !self.email() || !self.password()) {
                self.errorMessage("All fields are required.");
                return;
            }
            self.errorMessage("");

            const companyData = {
                name: self.name(),
                email: self.email(),
                password: self.password()
            };

            try {
                const response = await fetch("https://localhost:7209/api/Company", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(companyData)
                });

                if (!response.ok) throw new Error("Failed to add company");

                self.successMessage("Company added successfully!");
                setTimeout(() => {
                    location.href = "/admin/companies";
                }, 2000);
            } catch (error) {
                self.errorMessage("Error adding company.");
                console.error(error);
            }
        };
    }

    ko.applyBindings(new AddCompanyViewModel());
</script>
